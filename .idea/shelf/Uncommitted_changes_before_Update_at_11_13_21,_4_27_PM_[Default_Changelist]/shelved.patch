Index: app/src/main/java/edu/msu/steve702/ua_quality_assurance_platform/data_objects/ChecklistDataObject.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.msu.steve702.ua_quality_assurance_platform.data_objects;\n\nimport android.util.Pair;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\n\nimport com.google.firebase.firestore.Exclude;\n\nimport java.io.Serializable;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n//import java.util.Map;\n\npublic class ChecklistDataObject implements Serializable {\n\n\n\n    @Exclude private String id;\n\n    // Checklist number\n    private Integer checklist_id;\n\n    // Mapping between\n    //<section number, <question number, [question, answer]>\n    // List<Map<questionNum, question>>\n    //List<Map<questionNum, answer>>\n    private List<Map<Integer, String[]>> datamap1;\n    private Map<Integer, Map<Integer, String[]>> dataMap;\n\n    public ChecklistDataObject(){}\n\n    public ChecklistDataObject(Integer id, Map<Integer, Map<Integer, String[]>> map, List<Map<Integer, String[]>> newlist) {\n        this.checklist_id = id;\n        this.dataMap = map;\n        this.datamap1 = newlist;\n    }\n\n\n\n    public void setChecklistId(int id){\n        checklist_id = id;\n    }\n\n    public int getChecklistId(){return checklist_id;}\n\n    public boolean hasKey(int key) {\n        return dataMap.containsKey(key);\n    }\n\n\n    public String[] getQuestion(int category, int question){\n        return dataMap.get(category).get(question);\n    }\n\n\n    public void add(int key){\n        dataMap.put(key, new HashMap());\n        datamap1.add(key-1, new HashMap());\n    }\n\n    public Map<Integer, String[]> get(int key){\n        return datamap1.get(key-1);\n        //return dataMap.get(key);\n    }\n\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/edu/msu/steve702/ua_quality_assurance_platform/data_objects/ChecklistDataObject.java b/app/src/main/java/edu/msu/steve702/ua_quality_assurance_platform/data_objects/ChecklistDataObject.java
--- a/app/src/main/java/edu/msu/steve702/ua_quality_assurance_platform/data_objects/ChecklistDataObject.java	
+++ b/app/src/main/java/edu/msu/steve702/ua_quality_assurance_platform/data_objects/ChecklistDataObject.java	
@@ -8,6 +8,7 @@
 import com.google.firebase.firestore.Exclude;
 
 import java.io.Serializable;
+import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -22,6 +23,8 @@
     // Checklist number
     private Integer checklist_id;
 
+    //private List<String> testList;
+
     // Mapping between
     //<section number, <question number, [question, answer]>
     // List<Map<questionNum, question>>
@@ -35,6 +38,12 @@
         this.checklist_id = id;
         this.dataMap = map;
         this.datamap1 = newlist;
+
+//        testList = new ArrayList<>();
+//
+//        testList.add("item1");
+//        testList.add("item2");
+//        testList.add("item3");
     }
 
 
@@ -65,6 +74,10 @@
         //return dataMap.get(key);
     }
 
+    public Map<Integer, Map<Integer, String[]>> getData(){
+        return this.dataMap;
+    }
+
 
 
 
Index: app/src/main/java/edu/msu/steve702/ua_quality_assurance_platform/activities/AuditActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.msu.steve702.ua_quality_assurance_platform.activities;\n\nimport android.app.AlertDialog;\nimport android.app.Dialog;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.os.Trace;\nimport android.util.Log;\nimport android.view.Menu;\nimport android.view.MenuInflater;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.widget.Toolbar;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.viewpager.widget.ViewPager;\n\nimport com.google.android.gms.tasks.OnCompleteListener;\nimport com.google.android.gms.tasks.OnFailureListener;\nimport com.google.android.gms.tasks.OnSuccessListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.android.material.tabs.TabItem;\nimport com.google.android.material.tabs.TabLayout;\nimport com.google.firebase.firestore.CollectionReference;\nimport com.google.firebase.firestore.DocumentReference;\nimport com.google.firebase.firestore.DocumentSnapshot;\nimport com.google.firebase.firestore.FirebaseFirestore;\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\nimport com.google.firebase.firestore.QuerySnapshot;\nimport com.google.firebase.firestore.SetOptions;\n\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.List;\n\nimport edu.msu.steve702.ua_quality_assurance_platform.ExcelParser;\nimport edu.msu.steve702.ua_quality_assurance_platform.InProcessActivity;\nimport edu.msu.steve702.ua_quality_assurance_platform.InitialAuditActivity;\nimport edu.msu.steve702.ua_quality_assurance_platform.R;\nimport edu.msu.steve702.ua_quality_assurance_platform.data_objects.AuditObject;\nimport edu.msu.steve702.ua_quality_assurance_platform.data_objects.CalibrationTableDataObject;\nimport edu.msu.steve702.ua_quality_assurance_platform.data_objects.ChecklistDataObject;\nimport edu.msu.steve702.ua_quality_assurance_platform.data_objects.InProcessObject;\nimport edu.msu.steve702.ua_quality_assurance_platform.data_objects.ROMTableDataObject;\nimport edu.msu.steve702.ua_quality_assurance_platform.data_objects.ShelfLifeTableDataObject;\nimport edu.msu.steve702.ua_quality_assurance_platform.data_objects.TechnicalTableDataObject;\nimport edu.msu.steve702.ua_quality_assurance_platform.data_objects.TraceabilityTableDataObject;\nimport edu.msu.steve702.ua_quality_assurance_platform.data_objects.TrainingTableDataObject;\nimport edu.msu.steve702.ua_quality_assurance_platform.main_fragments.AuditPageAdapter;\nimport edu.msu.steve702.ua_quality_assurance_platform.main_fragments.AuditSpecFragment;\nimport edu.msu.steve702.ua_quality_assurance_platform.main_fragments.InProcessFragment;\nimport edu.msu.steve702.ua_quality_assurance_platform.main_fragments.TableDataFragment;\n\nimport static android.content.ContentValues.TAG;\n\npublic class AuditActivity extends AppCompatActivity {\n    Toolbar toolbar;\n    TabLayout tabLayout;\n    ViewPager viewPager;\n    AuditPageAdapter pageAdapter;\n    TabItem tabAuditSpecs;\n    TabItem tabChecklist;\n    TabItem tabInProcess;\n    TabItem tabTableData;\n    String checklist_name;\n\n    private Button auditSpecsSaveBtn;\n    private Button inProcessSaveBtn;\n\n    public FirebaseFirestore db;\n\n    private AuditSpecFragment auditSpecFragment;\n    private InProcessFragment inProcessFragment;\n\n    private String audit_id;\n    private Context context;\n\n    private ChecklistDataObject checklist;\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_audit);\n        context = getApplicationContext();\n        db = FirebaseFirestore.getInstance();\n\n        toolbar = findViewById(R.id.toolbar);\n        toolbar.setTitle(R.string.title);\n        setSupportActionBar(toolbar);\n\n        tabLayout = findViewById(R.id.auditTabLayout);\n        tabAuditSpecs = findViewById(R.id.auditSpecsTabItem);\n        tabChecklist = findViewById(R.id.checklistTabItem);\n        tabInProcess = findViewById(R.id.inProcessTabItem);\n        tabTableData = findViewById(R.id.tableDataTabItem);\n        viewPager = findViewById(R.id.viewPager);\n\n        //name of the checklist that was selected from the previous view\n        checklist_name = getIntent().getStringExtra(\"checklistName\");\n        try{\n            ExcelParser parser = new ExcelParser(this);\n\n            checklist = parser.readXLSXFile(checklist_name);\n        }catch(IOException e){\n            Log.e(\"Failed to Parse Excel\", \"Error message: \" + e.getMessage());\n        }\n\n        pageAdapter = new AuditPageAdapter(getSupportFragmentManager(), tabLayout.getTabCount(), checklist_name, context, checklist);\n        viewPager.setAdapter(pageAdapter);\n\n        //For pre populating data\n        Intent intent = getIntent();\n        if (intent.getExtras() != null && intent.getExtras().containsKey(\"audit_id\")) {\n            audit_id = getIntent().getStringExtra(\"audit_id\");\n            pageAdapter.getAuditSpecFragment().setAuditObject((AuditObject) getIntent().getSerializableExtra(\"auditObject\"));\n            pageAdapter.getInProcessFragment().setInProcessList((List<InProcessObject>) getIntent().getSerializableExtra(\"InProcessList\"));\n            if (getIntent().getExtras().containsKey(\"TechnicalDataTable\")) {\n                pageAdapter.getTableDataFragment().setTechnicalTableDataObject((TechnicalTableDataObject) getIntent().getSerializableExtra(\"TechnicalDataTable\"));\n            }\n            if (getIntent().getExtras().containsKey(\"ROMTableData\")) {\n                pageAdapter.getTableDataFragment().setRomTableDataObject((ROMTableDataObject) getIntent().getSerializableExtra(\"ROMTableData\"));\n            }\n            if (getIntent().getExtras().containsKey(\"CalibrationTableData\")) {\n                pageAdapter.getTableDataFragment().setCalibrationTableDataObject((CalibrationTableDataObject) getIntent().getSerializableExtra(\"CalibrationTableData\"));\n            }\n            if (getIntent().getExtras().containsKey(\"TrainingTableData\")) {\n                pageAdapter.getTableDataFragment().setTrainingTableDataObject((TrainingTableDataObject) getIntent().getSerializableExtra(\"TrainingTableData\"));\n            }\n            if (getIntent().getExtras().containsKey(\"TraceabilityTableData\")) {\n                pageAdapter.getTableDataFragment().setTraceabilityTableDataObject((TraceabilityTableDataObject) getIntent().getSerializableExtra(\"TraceabilityTableData\"));\n            }\n            if (getIntent().getExtras().containsKey(\"ShelfLifeTableData\")) {\n                pageAdapter.getTableDataFragment().setShelfLifeTableDataObject((ShelfLifeTableDataObject) getIntent().getSerializableExtra(\"ShelfLifeTableData\"));\n            }\n        }\n\n//        if (savedInstanceState != null) {\n//            // Restore the fragment's instance\n//            auditSpecFragment = (AuditSpecFragment) getSupportFragmentManager().getFragment(savedInstanceState, \"auditSpecsFragment\");\n//            inProcessFragment = (InProcessFragment) getSupportFragmentManager().getFragment(savedInstanceState, \"inProcessFragment\");\n//        }\n\n\n        tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\n            @Override\n            public void onTabSelected(TabLayout.Tab tab) {\n                viewPager.setCurrentItem(tab.getPosition());\n\n            }\n\n            @Override\n            public void onTabUnselected(TabLayout.Tab tab) {\n\n            }\n\n            @Override\n            public void onTabReselected(TabLayout.Tab tab) {\n\n            }\n        });\n        viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));\n\n    }\n\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        MenuInflater inflater = getMenuInflater();\n        inflater.inflate(R.menu.menu_audit, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        String option1 = getString(R.string.save);\n        String option2 = getString(R.string.generate_pdf);\n        String option3 = getString(R.string.take_photo);\n        String option4 = getString(R.string.upload_photo);\n\n        Toast.makeText(this, \"Clicked on \" + item.getTitle(), Toast.LENGTH_SHORT).show();\n        if (option1.equals(item.getTitle().toString())) {\n            saveAuditSpecs();\n        } else if (option2.equals(item.getTitle().toString())) {\n\n        }\n        return true;\n    }\n\n    @Override\n    protected void onSaveInstanceState(Bundle outState) {\n        super.onSaveInstanceState(outState);\n\n        //Save the fragment's instance\n        getSupportFragmentManager().putFragment(outState, \"auditSpecsFragment\", auditSpecFragment);\n        getSupportFragmentManager().putFragment(outState, \"inProcessFragment\", inProcessFragment);\n    }\n\n\n\n    private void saveAuditSpecs() {\n        pageAdapter.getAuditSpecFragment().bundleObject();\n        AuditObject auditObject = pageAdapter.getAuditSpecFragment().getAuditObject();\n\n        CollectionReference dbAuditSpecs = db.collection(\"Audit\");\n\n        if (audit_id != null) {\n            // save to existing audit in firestore\n            dbAuditSpecs.document(audit_id).set(auditObject, SetOptions.merge()).addOnSuccessListener(new OnSuccessListener<Void>() {\n                @Override\n                public void onSuccess(Void avoid) {\n                    Toast.makeText(AuditActivity.this, \"Audit Information Updated\", Toast.LENGTH_LONG).show();\n\n                    CollectionReference dbInProcessSheets = db.collection(\"Audit\").document(audit_id).collection(\"in-process\");\n                    CollectionReference dbTechnicalTable = db.collection(\"Audit\").document(audit_id).collection(\"TechnicalDataTable\");\n                    CollectionReference dbROMTable = db.collection(\"Audit\").document(audit_id).collection(\"ROMTable\");\n                    CollectionReference dbCalibrationTable = db.collection(\"Audit\").document(audit_id).collection(\"CalibrationTable\");\n                    CollectionReference dbTrainingTable = db.collection(\"Audit\").document(audit_id).collection(\"TrainingTable\");\n                    CollectionReference dbTraceabilityTable = db.collection(\"Audit\").document(audit_id).collection(\"TraceabilityTable\");\n                    CollectionReference dbShelfLifeTable = db.collection(\"Audit\").document(audit_id).collection(\"ShelfLifeTable\");\n                    CollectionReference dbChecklist = db.collection(\"Audit\").document(audit_id).collection(\"Checklist\");\n\n                    //If audit_id is not null we have to adjust the data by deleting existing data and updating with new data from the fragments\n                    if (audit_id != null) {\n                        dbInProcessSheets.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\n                            @Override\n                            public void onComplete(@NonNull Task<QuerySnapshot> task) {\n                                if (task.isSuccessful()) {\n\n                                    for (DocumentSnapshot doc: task.getResult()) {\n                                        doc.getReference().delete();\n                                    }\n\n                                    saveInProcess();\n                                } else {\n                                    Log.d(TAG, \"Error getting documents: \", task.getException());\n                                }\n                            }\n                        });\n\n                        //rebundle table data\n                        pageAdapter.getTableDataFragment().bundleObjects();\n\n                        dbTechnicalTable.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\n                            @Override\n                            public void onComplete(@NonNull Task<QuerySnapshot> task) {\n                                if (task.isSuccessful()) {\n\n                                    for (DocumentSnapshot doc: task.getResult()) {\n                                        doc.getReference().delete();\n                                    }\n\n                                    saveTechnicalDataTable();\n                                } else {\n                                    Log.d(TAG, \"Error getting documents: \", task.getException());\n                                }\n                            }\n                        });\n\n                        dbROMTable.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\n                            @Override\n                            public void onComplete(@NonNull Task<QuerySnapshot> task) {\n                                if (task.isSuccessful()) {\n\n                                    for (DocumentSnapshot doc: task.getResult()) {\n                                        doc.getReference().delete();\n                                    }\n\n                                    saveROMTable();\n                                } else {\n                                    Log.d(TAG, \"Error getting documents: \", task.getException());\n                                }\n                            }\n                        });\n\n                        dbCalibrationTable.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\n                            @Override\n                            public void onComplete(@NonNull Task<QuerySnapshot> task) {\n                                if (task.isSuccessful()) {\n\n                                    for (DocumentSnapshot doc: task.getResult()) {\n                                        doc.getReference().delete();\n                                    }\n\n                                    saveCalibrationTable();\n                                } else {\n                                    Log.d(TAG, \"Error getting documents: \", task.getException());\n                                }\n                            }\n                        });\n\n                        dbTrainingTable.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\n                            @Override\n                            public void onComplete(@NonNull Task<QuerySnapshot> task) {\n                                if (task.isSuccessful()) {\n\n                                    for (DocumentSnapshot doc: task.getResult()) {\n                                        doc.getReference().delete();\n                                    }\n\n                                    saveTrainingTable();\n                                } else {\n                                    Log.d(TAG, \"Error getting documents: \", task.getException());\n                                }\n                            }\n                        });\n\n                        dbTraceabilityTable.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\n                            @Override\n                            public void onComplete(@NonNull Task<QuerySnapshot> task) {\n                                if (task.isSuccessful()) {\n\n                                    for (DocumentSnapshot doc: task.getResult()) {\n                                        doc.getReference().delete();\n                                    }\n\n                                    saveTraceabilityTable();\n                                } else {\n                                    Log.d(TAG, \"Error getting documents: \", task.getException());\n                                }\n                            }\n                        });\n\n                        dbShelfLifeTable.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\n                            @Override\n                            public void onComplete(@NonNull Task<QuerySnapshot> task) {\n                                if (task.isSuccessful()) {\n\n                                    for (DocumentSnapshot doc: task.getResult()) {\n                                        doc.getReference().delete();\n                                    }\n\n                                    saveShelfLifeTable();\n                                } else {\n                                    Log.d(TAG, \"Error getting documents: \", task.getException());\n                                }\n                            }\n                        });\n\n                        dbChecklist.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\n                            @Override\n                            public void onComplete(@NonNull Task<QuerySnapshot> task) {\n                                if (task.isSuccessful()) {\n\n                                    for (DocumentSnapshot doc: task.getResult()) {\n                                        doc.getReference().delete();\n                                    }\n\n                                    saveChecklist();\n                                } else {\n                                    Log.d(TAG, \"Error getting documents: \", task.getException());\n                                }\n                            }\n                        });\n                    }\n                }\n            }).addOnFailureListener(new OnFailureListener() {\n                @Override\n                public void onFailure(@NonNull Exception e) {\n                    Toast.makeText(AuditActivity.this, e.getMessage(), Toast.LENGTH_LONG).show();\n\n                }\n            });\n        } else {\n            // save new audit in firestore\n            dbAuditSpecs.add(auditObject).addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n                @Override\n                public void onSuccess(DocumentReference documentReference) {\n                    audit_id = documentReference.getId();\n                    Toast.makeText(AuditActivity.this, \"Audit Information Added\", Toast.LENGTH_LONG).show();\n                    saveInProcess();\n\n                    if (pageAdapter.getTableDataFragment().getTablePageAdapter() != null) {\n                        pageAdapter.getTableDataFragment().bundleObjects();\n                        saveTechnicalDataTable();\n                        saveROMTable();\n                        saveCalibrationTable();\n                        saveTrainingTable();\n                        saveTraceabilityTable();\n                        saveShelfLifeTable();\n                    }\n                    saveChecklist();\n                }\n            }).addOnFailureListener(new OnFailureListener() {\n                @Override\n                public void onFailure(@NonNull Exception e) {\n                    Toast.makeText(AuditActivity.this, e.getMessage(), Toast.LENGTH_LONG).show();\n\n                }\n            });\n        }\n\n    }\n\n\n    private void saveInProcess() {\n        //pageAdapter.getInProcessFragment().bundleObject();\n        List<InProcessObject> inProcessList = pageAdapter.getInProcessFragment().getInProcessList();\n\n        CollectionReference dbInProcessSheets = db.collection(\"Audit\").document(audit_id).collection(\"in-process\");\n\n        // save in firestore - NOTE if there are no inprocess to save the collection will not be created\n        for (InProcessObject inProcess: inProcessList) {\n            dbInProcessSheets.add(inProcess).addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n                @Override\n                public void onSuccess(DocumentReference documentReference) {\n                    Toast.makeText(AuditActivity.this, \"In-Process Sheets Added\", Toast.LENGTH_LONG).show();\n\n                }\n            }).addOnFailureListener(new OnFailureListener() {\n                @Override\n                public void onFailure(@NonNull Exception e) {\n                    Toast.makeText(AuditActivity.this, e.getMessage(), Toast.LENGTH_LONG).show();\n\n                }\n            });\n        }\n\n    }\n\n    public void saveTechnicalDataTable() {\n        if (pageAdapter.getTableDataFragment().getTablePageAdapter().getTechDataFragment().getFragmentView() != null) {\n            TechnicalTableDataObject techObject = pageAdapter.getTableDataFragment().getTechnicalTableDataObject();\n\n            CollectionReference dbTechnicalTable = db.collection(\"Audit\").document(audit_id).collection(\"TechnicalDataTable\");\n\n            // save in firestore\n            dbTechnicalTable.add(techObject).addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n                @Override\n                public void onSuccess(DocumentReference documentReference) {\n                    Toast.makeText(AuditActivity.this, \"Technical Data Table Added\", Toast.LENGTH_LONG).show();\n                }\n            }).addOnFailureListener(new OnFailureListener() {\n                @Override\n                public void onFailure(@NonNull Exception e) {\n                    Toast.makeText(AuditActivity.this, e.getMessage(), Toast.LENGTH_LONG).show();\n\n                }\n            });\n        }\n    }\n\n    public void saveROMTable() {\n        if (pageAdapter.getTableDataFragment().getTablePageAdapter().getRomTableFragment().getFragmentView() != null) {\n            ROMTableDataObject romObject = pageAdapter.getTableDataFragment().getRomTableDataObject();\n\n            CollectionReference dbROMTable = db.collection(\"Audit\").document(audit_id).collection(\"ROMTable\");\n\n            // save in firestore\n            dbROMTable.add(romObject).addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n                @Override\n                public void onSuccess(DocumentReference documentReference) {\n                    Toast.makeText(AuditActivity.this, \"ROM Table Added\", Toast.LENGTH_LONG).show();\n                }\n            }).addOnFailureListener(new OnFailureListener() {\n                @Override\n                public void onFailure(@NonNull Exception e) {\n                    Toast.makeText(AuditActivity.this, e.getMessage(), Toast.LENGTH_LONG).show();\n\n                }\n            });\n        }\n    }\n\n    public void saveCalibrationTable() {\n        if (pageAdapter.getTableDataFragment().getTablePageAdapter().getCalTableFragment().getFragmentView() != null) {\n            CalibrationTableDataObject calObject = pageAdapter.getTableDataFragment().getCalibrationTableDataObject();\n\n            CollectionReference dbCalibrationTable = db.collection(\"Audit\").document(audit_id).collection(\"CalibrationTable\");\n\n            // save in firestore\n            dbCalibrationTable.add(calObject).addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n                @Override\n                public void onSuccess(DocumentReference documentReference) {\n                    Toast.makeText(AuditActivity.this, \"Calibration Table Added\", Toast.LENGTH_LONG).show();\n                }\n            }).addOnFailureListener(new OnFailureListener() {\n                @Override\n                public void onFailure(@NonNull Exception e) {\n                    Toast.makeText(AuditActivity.this, e.getMessage(), Toast.LENGTH_LONG).show();\n\n                }\n            });\n        }\n    }\n\n    public void saveTrainingTable() {\n        if (pageAdapter.getTableDataFragment().getTablePageAdapter().getTrainTableFragment().getFragmentView() != null) {\n            TrainingTableDataObject trainObject = pageAdapter.getTableDataFragment().getTrainingTableDataObject();\n\n            CollectionReference dbTrainingTable = db.collection(\"Audit\").document(audit_id).collection(\"TrainingTable\");\n\n            // save in firestore\n            dbTrainingTable.add(trainObject).addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n                @Override\n                public void onSuccess(DocumentReference documentReference) {\n                    Toast.makeText(AuditActivity.this, \"Training Table Added\", Toast.LENGTH_LONG).show();\n                }\n            }).addOnFailureListener(new OnFailureListener() {\n                @Override\n                public void onFailure(@NonNull Exception e) {\n                    Toast.makeText(AuditActivity.this, e.getMessage(), Toast.LENGTH_LONG).show();\n                }\n            });\n        }\n    }\n\n    public void saveTraceabilityTable() {\n        if (pageAdapter.getTableDataFragment().getTablePageAdapter().getTraceTableFragment().getFragmentView() != null) {\n            TraceabilityTableDataObject traceObject = pageAdapter.getTableDataFragment().getTraceabilityTableDataObject();\n\n            CollectionReference dbTraceabilityTable = db.collection(\"Audit\").document(audit_id).collection(\"TraceabilityTable\");\n\n            // save in firestore\n            dbTraceabilityTable.add(traceObject).addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n                @Override\n                public void onSuccess(DocumentReference documentReference) {\n                    Toast.makeText(AuditActivity.this, \"Traceability Table Added\", Toast.LENGTH_LONG).show();\n                }\n            }).addOnFailureListener(new OnFailureListener() {\n                @Override\n                public void onFailure(@NonNull Exception e) {\n                    Toast.makeText(AuditActivity.this, e.getMessage(), Toast.LENGTH_LONG).show();\n\n                }\n            });\n        }\n    }\n\n    public void saveShelfLifeTable() {\n        if (pageAdapter.getTableDataFragment().getTablePageAdapter().getShelfTableFragment().getFragmentView() != null) {\n            ShelfLifeTableDataObject shelfObject = pageAdapter.getTableDataFragment().getShelfLifeTableDataObject();\n\n            CollectionReference dbShelfLifeTable = db.collection(\"Audit\").document(audit_id).collection(\"ShelfLifeTable\");\n\n            // save in firestore\n            dbShelfLifeTable.add(shelfObject).addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n                @Override\n                public void onSuccess(DocumentReference documentReference) {\n                    Toast.makeText(AuditActivity.this, \"Shelf Life Table Added\", Toast.LENGTH_LONG).show();\n                }\n            }).addOnFailureListener(new OnFailureListener() {\n                @Override\n                public void onFailure(@NonNull Exception e) {\n                    Toast.makeText(AuditActivity.this, e.getMessage(), Toast.LENGTH_LONG).show();\n\n                }\n            });\n        }\n    }\n\n\n    // Save checklist to firestore database\n    public void saveChecklist() {\n        if (checklist != null) {\n            CollectionReference dbChecklist = db.collection(\"Audit\").document(audit_id).collection(\"Checklist\");\n\n            // save in firestore\n            dbChecklist.add(checklist).addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n                @Override\n                public void onSuccess(DocumentReference documentReference) {\n                    Toast.makeText(AuditActivity.this, \"Checklist Added\", Toast.LENGTH_LONG).show();\n                }\n            }).addOnFailureListener(new OnFailureListener() {\n                @Override\n                public void onFailure(@NonNull Exception e) {\n                    Toast.makeText(AuditActivity.this, e.getMessage(), Toast.LENGTH_LONG).show();\n\n                }\n            });\n        }\n    }\n\n\n//    @Override\n//    public void onClick(View view) {\n//        switch (view.getId()) {\n//            case R.id.saveAuditSpecs:\n//                saveAuditSpecs(pageAdapter.getAuditSpecFragment().getView());\n//                break;\n//            case R.id.saveInProcess:\n//                saveInProcess(pageAdapter.getInProcessFragment().getView());\n//                break;\n//        }\n//    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/edu/msu/steve702/ua_quality_assurance_platform/activities/AuditActivity.java b/app/src/main/java/edu/msu/steve702/ua_quality_assurance_platform/activities/AuditActivity.java
--- a/app/src/main/java/edu/msu/steve702/ua_quality_assurance_platform/activities/AuditActivity.java	
+++ b/app/src/main/java/edu/msu/steve702/ua_quality_assurance_platform/activities/AuditActivity.java	
@@ -559,12 +559,14 @@
     // Save checklist to firestore database
     public void saveChecklist() {
         if (checklist != null) {
+
             CollectionReference dbChecklist = db.collection("Audit").document(audit_id).collection("Checklist");
 
             // save in firestore
             dbChecklist.add(checklist).addOnSuccessListener(new OnSuccessListener<DocumentReference>() {
                 @Override
                 public void onSuccess(DocumentReference documentReference) {
+
                     Toast.makeText(AuditActivity.this, "Checklist Added", Toast.LENGTH_LONG).show();
                 }
             }).addOnFailureListener(new OnFailureListener() {
@@ -574,6 +576,8 @@
 
                 }
             });
+
+
         }
     }
 
